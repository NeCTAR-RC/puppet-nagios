#!/bin/bash
set -e

if [ "$UID" -ne 0 ]
then
    echo "Can only be run as root"
    exit 1
fi

PUPPETDB_HOST="<%= @puppetdb_host %>"
PUPPETDB_PORT="<%= @puppetdb_port %>"
OUTPUT_DIR=/etc/nagios3/conf.d
CONFIG_FILE=/etc/nagios3/naginator.ini
TEMP_DIR="$(mktemp -d)"
RESULT=""

function print_help {
    cat <<EOF
update-nagios-config [-h]

Generate a new Nagios configuration from PuppetDB and replace the
existing Nagios.

 -d    Generate configuration

EOF
}

cleanup() {
    if [ $? -gt 0 ]
    then
        echo "${RESULT}"
        echo "ERROR running update-nagios-config"
    fi
    rm -rf $TEMP_DIR
}
trap cleanup 0

function generate {
    RESULT=$(external_naginator.py --host $PUPPETDB_HOST --port $PUPPETDB_PORT --output-dir $TEMP_DIR -c $CONFIG_FILE)
    diff -uN /etc/nagios3/conf.d/auto_host.cfg $TEMP_DIR/auto_host.cfg  | egrep '^-' -C 2
    if ! diff -r $TEMP_DIR/ $OUTPUT_DIR > /dev/null
    then
        rsync --dirs --delete $TEMP_DIR/ $OUTPUT_DIR
    fi

    RESULT=$(service nagios3 restart)
}

while getopts ":d" opt; do
    case $opt in
        d)
            generate
            exit 0
            ;;
        *)
            print_help
            exit 0
            ;;
    esac
done

# Exit if there are no options.
print_help
exit 0
